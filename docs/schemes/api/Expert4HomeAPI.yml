openapi: 3.0.0
servers:
  - url: http://localhost:8080
info:
  description: Restfull API for Expets4Home application
  version: "1.0.0"
  title: Expets4Home API
  contact:
    email: dev@red-heron.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
paths:
  /api/users:
    get:
      summary: get user by id
      description: |
        By passing in the user id you can get data about that user
      parameters:
        - name: pageSize
          in: query
          description: Size of response page
          required: false
          schema:
            type: integer
        - name: pageIndex
          in: query
          description: Index of response page
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: request valid
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/UserDTO"
                  - $ref: "#/components/schemas/ExpertsPageDTO"
        "400":
          description: bad input parameters

    post:
      summary: create new user
      description: |
        By passing in the user data you can create new user account
      requestBody:
        description: User object for which to create an account
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUser"
        required: true
      responses:
        "200":
          description: user created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
        "400":
          description: bad input parameter

  /api/users/{id}:
    get:
      summary: get user by id
      description: |
        By passing in the user id you can get data about that user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: user found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
        "400":
          description: bad input parameter
        "404":
          description: user not found

    put:
      summary: update existing user
      description: |
        By passing in the user data you can update account of existing user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: User object for which to create update data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUser"
        required: true
      responses:
        "201":
          description: user updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
        "226":
          description: user not found
        "400":
          description: bad input parameter

  /api/users/mylogin/{login}:
    get:
      summary: get user by login
      description: |
        By passing in the user login you can get data about that user
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: user found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
        "400":
          description: bad input parameter
        "404":
          description: user not found

components:
  schemas:
    NewUser:
      type: object
      required:
        - id
        - name
        - surname
        - login
        - password
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Steven
        surname:
          type: string
          example: Johnson
        login:
          type: string
          example: Sjohn2
        password:
          type: string
          example: Big Kye Moss Flappy Book Jell
        expertMode:
          type: boolean
          example: true
        profession:
          type: string
          example: Baker
        description:
          type: string
          example: Proud owner of bakary run with tradition for over 50 yeras.

    JobOrder:
      type: object
      required:
        - creationDate
        - dueDate
        - acceptationDate
        - startDate
        - done
        - description
        - state
        - contact
        - comment
      properties:
        creationDate:
          type: string
          format: date-time
          example: "2016-08-29T09:12:33.001Z"
        dueDate:
          type: string
          format: date-time
          example: "2016-15-29T09:12:33.001Z"
        acceptationDate:
          type: string
          format: date-time
          example: "2016-12-29T09:12:33.001Z"
        startDate:
          type: string
          format: date-time
          example: "2016-09-29T09:12:33.001Z"
        done:
          type: boolean
          example: true
        description:
          type: string
          example: My cars doesn't start. There is probably some engine failure
        state:
          type: string
          example: COMPLETED
        contact:
          type: string
          example: "Phone: 123-567-890"
        comment:
          type: string
          example: I pay double if this gests done quck.

    UserDTO:
      type: object
      required:
        - id
        - name
        - surname
        - login
        - password
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Steven
        surname:
          type: string
          example: Johnson
        login:
          type: string
          example: Sjohn2
        expertMode:
          type: boolean
          example: true
        profession:
          type: string
          example: Baker
        description:
          type: string
          example: Proud owner of bakary run with tradition for over 50 yeras.
        jobOrderDTOList:
          type: array
          items:
            $ref: "#/components/schemas/JobOrder"

    ExpertsPageDTO:
      type: object
      properties:
        pageSize:
          type: integer
          example: 20
        currentPageIndex:
          type: integer
          example: 3
        totalPageCount:
          type: integer
          example: 10
        experts:
          type: array
          items:
            $ref: "#/components/schemas/UserDTO"
