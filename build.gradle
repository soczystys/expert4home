import org.apache.tools.ant.taskdefs.condition.Os

plugins {
	id 'org.springframework.boot' version '2.2.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id "com.moowork.node" version "1.3.1"
}

node {
	nodeModulesDir = file("./src/react-app")
}

group = 'com.redteam'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'mysql:mysql-connector-java'
	implementation 'javax.xml.bind:jaxb-api:2.3.0'
	implementation 'org.projectlombok:lombok:1.18.4'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

task cleanReactApp(type: Delete) {
	delete './src/main/resources/public'
}

task buildReactApp(type: NpmTask, dependsOn: npmInstall) {
	args = ['run-script', 'build']
}

task deployReactApp(type: Copy) {
	dependsOn 'cleanReactApp'
	dependsOn 'buildReactApp'
	from './src/react-app/build'
	into './src/main/resources/public'
	tasks.findByName('buildReactApp').mustRunAfter 'cleanReactApp'
}

task cloneIndexAsTemplate(type: Copy) {
	from './src/main/resources/public/index.html'
	into './src/main/resources/templates/'
}

task bootFrontEnd(type: NpmTask) {
	args = ['run-script', 'start']
}

task bootFullStack {
	dependsOn 'deployReactApp'
	dependsOn 'cloneIndexAsTemplate'
	dependsOn 'bootRun'
	tasks.findByName('cloneIndexAsTemplate').mustRunAfter 'deployReactApp'
	tasks.findByName('bootRun').mustRunAfter 'cloneIndexAsTemplate'
}

task killNodeProcess(type:Exec) {
	if (Os.isFamily(Os.FAMILY_WINDOWS)) {
		commandLine 'taskkill', '-F', '-IM', 'node.exe'
	} else {
		commandLine 'pkill', '-f', 'node'
	}
}
